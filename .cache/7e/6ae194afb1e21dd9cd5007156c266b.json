{"id":"../node_modules/nedb/lib/cursor.js","dependencies":[{"name":"/Users/reidbrown/react-bootcamp/TestTask/package.json","includedInParent":true,"mtime":1592783413663},{"name":"/Users/reidbrown/react-bootcamp/TestTask/.babelrc","includedInParent":true,"mtime":1589062941327},{"name":"/Users/reidbrown/react-bootcamp/TestTask/node_modules/nedb/package.json","includedInParent":true,"mtime":1592783413306},{"name":"./model","loc":{"line":4,"column":20},"parent":"/Users/reidbrown/react-bootcamp/TestTask/node_modules/nedb/lib/cursor.js","resolved":"/Users/reidbrown/react-bootcamp/TestTask/node_modules/nedb/lib/model.js"},{"name":"underscore","loc":{"line":5,"column":16},"parent":"/Users/reidbrown/react-bootcamp/TestTask/node_modules/nedb/lib/cursor.js","resolved":"/Users/reidbrown/react-bootcamp/TestTask/node_modules/underscore/underscore.js"}],"generated":{"js":"/**\n * Manage access to data, be it to find, update or remove it\n */\nvar model = require('./model')\n  , _ = require('underscore')\n  ;\n\n\n\n/**\n * Create a new cursor for this collection\n * @param {Datastore} db - The datastore this cursor is bound to\n * @param {Query} query - The query this cursor will operate on\n * @param {Function} execFn - Handler to be executed after cursor has found the results and before the callback passed to find/findOne/update/remove\n */\nfunction Cursor (db, query, execFn) {\n  this.db = db;\n  this.query = query || {};\n  if (execFn) { this.execFn = execFn; }\n}\n\n\n/**\n * Set a limit to the number of results\n */\nCursor.prototype.limit = function(limit) {\n  this._limit = limit;\n  return this;\n};\n\n\n/**\n * Skip a the number of results\n */\nCursor.prototype.skip = function(skip) {\n  this._skip = skip;\n  return this;\n};\n\n\n/**\n * Sort results of the query\n * @param {SortQuery} sortQuery - SortQuery is { field: order }, field can use the dot-notation, order is 1 for ascending and -1 for descending\n */\nCursor.prototype.sort = function(sortQuery) {\n  this._sort = sortQuery;\n  return this;\n};\n\n\n/**\n * Add the use of a projection\n * @param {Object} projection - MongoDB-style projection. {} means take all fields. Then it's { key1: 1, key2: 1 } to take only key1 and key2\n *                              { key1: 0, key2: 0 } to omit only key1 and key2. Except _id, you can't mix takes and omits\n */\nCursor.prototype.projection = function(projection) {\n  this._projection = projection;\n  return this;\n};\n\n\n/**\n * Apply the projection\n */\nCursor.prototype.project = function (candidates) {\n  var res = [], self = this\n    , keepId, action, keys\n    ;\n\n  if (this._projection === undefined || Object.keys(this._projection).length === 0) {\n    return candidates;\n  }\n\n  keepId = this._projection._id === 0 ? false : true;\n  this._projection = _.omit(this._projection, '_id');\n\n  // Check for consistency\n  keys = Object.keys(this._projection);\n  keys.forEach(function (k) {\n    if (action !== undefined && self._projection[k] !== action) { throw new Error(\"Can't both keep and omit fields except for _id\"); }\n    action = self._projection[k];\n  });\n\n  // Do the actual projection\n  candidates.forEach(function (candidate) {\n    var toPush;\n    if (action === 1) {   // pick-type projection\n      toPush = { $set: {} };\n      keys.forEach(function (k) {\n        toPush.$set[k] = model.getDotValue(candidate, k);\n        if (toPush.$set[k] === undefined) { delete toPush.$set[k]; }\n      });\n      toPush = model.modify({}, toPush);\n    } else {   // omit-type projection\n      toPush = { $unset: {} };\n      keys.forEach(function (k) { toPush.$unset[k] = true });\n      toPush = model.modify(candidate, toPush);\n    }\n    if (keepId) {\n      toPush._id = candidate._id;\n    } else {\n      delete toPush._id;\n    }\n    res.push(toPush);\n  });\n\n  return res;\n};\n\n\n/**\n * Get all matching elements\n * Will return pointers to matched elements (shallow copies), returning full copies is the role of find or findOne\n * This is an internal function, use exec which uses the executor\n *\n * @param {Function} callback - Signature: err, results\n */\nCursor.prototype._exec = function(_callback) {\n  var res = [], added = 0, skipped = 0, self = this\n    , error = null\n    , i, keys, key\n    ;\n\n  function callback (error, res) {\n    if (self.execFn) {\n      return self.execFn(error, res, _callback);\n    } else {\n      return _callback(error, res);\n    }\n  }\n\n  this.db.getCandidates(this.query, function (err, candidates) {\n    if (err) { return callback(err); }\n\n    try {\n      for (i = 0; i < candidates.length; i += 1) {\n        if (model.match(candidates[i], self.query)) {\n          // If a sort is defined, wait for the results to be sorted before applying limit and skip\n          if (!self._sort) {\n            if (self._skip && self._skip > skipped) {\n              skipped += 1;\n            } else {\n              res.push(candidates[i]);\n              added += 1;\n              if (self._limit && self._limit <= added) { break; }\n            }\n          } else {\n            res.push(candidates[i]);\n          }\n        }\n      }\n    } catch (err) {\n      return callback(err);\n    }\n\n    // Apply all sorts\n    if (self._sort) {\n      keys = Object.keys(self._sort);\n\n      // Sorting\n      var criteria = [];\n      for (i = 0; i < keys.length; i++) {\n        key = keys[i];\n        criteria.push({ key: key, direction: self._sort[key] });\n      }\n      res.sort(function(a, b) {\n        var criterion, compare, i;\n        for (i = 0; i < criteria.length; i++) {\n          criterion = criteria[i];\n          compare = criterion.direction * model.compareThings(model.getDotValue(a, criterion.key), model.getDotValue(b, criterion.key), self.db.compareStrings);\n          if (compare !== 0) {\n            return compare;\n          }\n        }\n        return 0;\n      });\n\n      // Applying limit and skip\n      var limit = self._limit || res.length\n        , skip = self._skip || 0;\n\n      res = res.slice(skip, skip + limit);\n    }\n\n    // Apply projection\n    try {\n      res = self.project(res);\n    } catch (e) {\n      error = e;\n      res = undefined;\n    }\n\n    return callback(error, res);\n  });\n};\n\nCursor.prototype.exec = function () {\n  this.db.executor.push({ this: this, fn: this._exec, arguments: arguments });\n};\n\n\n\n// Interface\nmodule.exports = Cursor;\n","map":{"mappings":[{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/nedb/lib/cursor.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}}],"sources":{"../node_modules/nedb/lib/cursor.js":"/**\n * Manage access to data, be it to find, update or remove it\n */\nvar model = require('./model')\n  , _ = require('underscore')\n  ;\n\n\n\n/**\n * Create a new cursor for this collection\n * @param {Datastore} db - The datastore this cursor is bound to\n * @param {Query} query - The query this cursor will operate on\n * @param {Function} execFn - Handler to be executed after cursor has found the results and before the callback passed to find/findOne/update/remove\n */\nfunction Cursor (db, query, execFn) {\n  this.db = db;\n  this.query = query || {};\n  if (execFn) { this.execFn = execFn; }\n}\n\n\n/**\n * Set a limit to the number of results\n */\nCursor.prototype.limit = function(limit) {\n  this._limit = limit;\n  return this;\n};\n\n\n/**\n * Skip a the number of results\n */\nCursor.prototype.skip = function(skip) {\n  this._skip = skip;\n  return this;\n};\n\n\n/**\n * Sort results of the query\n * @param {SortQuery} sortQuery - SortQuery is { field: order }, field can use the dot-notation, order is 1 for ascending and -1 for descending\n */\nCursor.prototype.sort = function(sortQuery) {\n  this._sort = sortQuery;\n  return this;\n};\n\n\n/**\n * Add the use of a projection\n * @param {Object} projection - MongoDB-style projection. {} means take all fields. Then it's { key1: 1, key2: 1 } to take only key1 and key2\n *                              { key1: 0, key2: 0 } to omit only key1 and key2. Except _id, you can't mix takes and omits\n */\nCursor.prototype.projection = function(projection) {\n  this._projection = projection;\n  return this;\n};\n\n\n/**\n * Apply the projection\n */\nCursor.prototype.project = function (candidates) {\n  var res = [], self = this\n    , keepId, action, keys\n    ;\n\n  if (this._projection === undefined || Object.keys(this._projection).length === 0) {\n    return candidates;\n  }\n\n  keepId = this._projection._id === 0 ? false : true;\n  this._projection = _.omit(this._projection, '_id');\n\n  // Check for consistency\n  keys = Object.keys(this._projection);\n  keys.forEach(function (k) {\n    if (action !== undefined && self._projection[k] !== action) { throw new Error(\"Can't both keep and omit fields except for _id\"); }\n    action = self._projection[k];\n  });\n\n  // Do the actual projection\n  candidates.forEach(function (candidate) {\n    var toPush;\n    if (action === 1) {   // pick-type projection\n      toPush = { $set: {} };\n      keys.forEach(function (k) {\n        toPush.$set[k] = model.getDotValue(candidate, k);\n        if (toPush.$set[k] === undefined) { delete toPush.$set[k]; }\n      });\n      toPush = model.modify({}, toPush);\n    } else {   // omit-type projection\n      toPush = { $unset: {} };\n      keys.forEach(function (k) { toPush.$unset[k] = true });\n      toPush = model.modify(candidate, toPush);\n    }\n    if (keepId) {\n      toPush._id = candidate._id;\n    } else {\n      delete toPush._id;\n    }\n    res.push(toPush);\n  });\n\n  return res;\n};\n\n\n/**\n * Get all matching elements\n * Will return pointers to matched elements (shallow copies), returning full copies is the role of find or findOne\n * This is an internal function, use exec which uses the executor\n *\n * @param {Function} callback - Signature: err, results\n */\nCursor.prototype._exec = function(_callback) {\n  var res = [], added = 0, skipped = 0, self = this\n    , error = null\n    , i, keys, key\n    ;\n\n  function callback (error, res) {\n    if (self.execFn) {\n      return self.execFn(error, res, _callback);\n    } else {\n      return _callback(error, res);\n    }\n  }\n\n  this.db.getCandidates(this.query, function (err, candidates) {\n    if (err) { return callback(err); }\n\n    try {\n      for (i = 0; i < candidates.length; i += 1) {\n        if (model.match(candidates[i], self.query)) {\n          // If a sort is defined, wait for the results to be sorted before applying limit and skip\n          if (!self._sort) {\n            if (self._skip && self._skip > skipped) {\n              skipped += 1;\n            } else {\n              res.push(candidates[i]);\n              added += 1;\n              if (self._limit && self._limit <= added) { break; }\n            }\n          } else {\n            res.push(candidates[i]);\n          }\n        }\n      }\n    } catch (err) {\n      return callback(err);\n    }\n\n    // Apply all sorts\n    if (self._sort) {\n      keys = Object.keys(self._sort);\n\n      // Sorting\n      var criteria = [];\n      for (i = 0; i < keys.length; i++) {\n        key = keys[i];\n        criteria.push({ key: key, direction: self._sort[key] });\n      }\n      res.sort(function(a, b) {\n        var criterion, compare, i;\n        for (i = 0; i < criteria.length; i++) {\n          criterion = criteria[i];\n          compare = criterion.direction * model.compareThings(model.getDotValue(a, criterion.key), model.getDotValue(b, criterion.key), self.db.compareStrings);\n          if (compare !== 0) {\n            return compare;\n          }\n        }\n        return 0;\n      });\n\n      // Applying limit and skip\n      var limit = self._limit || res.length\n        , skip = self._skip || 0;\n\n      res = res.slice(skip, skip + limit);\n    }\n\n    // Apply projection\n    try {\n      res = self.project(res);\n    } catch (e) {\n      error = e;\n      res = undefined;\n    }\n\n    return callback(error, res);\n  });\n};\n\nCursor.prototype.exec = function () {\n  this.db.executor.push({ this: this, fn: this._exec, arguments: arguments });\n};\n\n\n\n// Interface\nmodule.exports = Cursor;\n"},"lineCount":205}},"hash":"40a1dbc47418e4606407d7a83ad2f23c","cacheData":{"env":{}}}
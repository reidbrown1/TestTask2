{"id":"../node_modules/nedb/lib/model.js","dependencies":[{"name":"/Users/reidbrown/react-bootcamp/TestTask/package.json","includedInParent":true,"mtime":1592783413663},{"name":"/Users/reidbrown/react-bootcamp/TestTask/.babelrc","includedInParent":true,"mtime":1589062941327},{"name":"/Users/reidbrown/react-bootcamp/TestTask/node_modules/nedb/package.json","includedInParent":true,"mtime":1592783413306},{"name":"util","loc":{"line":8,"column":19},"parent":"/Users/reidbrown/react-bootcamp/TestTask/node_modules/nedb/lib/model.js","resolved":"/Users/reidbrown/react-bootcamp/TestTask/node_modules/util/util.js"},{"name":"underscore","loc":{"line":9,"column":16},"parent":"/Users/reidbrown/react-bootcamp/TestTask/node_modules/nedb/lib/model.js","resolved":"/Users/reidbrown/react-bootcamp/TestTask/node_modules/underscore/underscore.js"}],"generated":{"js":"/**\n * Handle models (i.e. docs)\n * Serialization/deserialization\n * Copying\n * Querying, update\n */\n\nvar util = require('util')\n  , _ = require('underscore')\n  , modifierFunctions = {}\n  , lastStepModifierFunctions = {}\n  , comparisonFunctions = {}\n  , logicalOperators = {}\n  , arrayComparisonFunctions = {}\n  ;\n\n\n/**\n * Check a key, throw an error if the key is non valid\n * @param {String} k key\n * @param {Model} v value, needed to treat the Date edge case\n * Non-treatable edge cases here: if part of the object if of the form { $$date: number } or { $$deleted: true }\n * Its serialized-then-deserialized version it will transformed into a Date object\n * But you really need to want it to trigger such behaviour, even when warned not to use '$' at the beginning of the field names...\n */\nfunction checkKey (k, v) {\n  if (typeof k === 'number') {\n    k = k.toString();\n  }\n\n  if (k[0] === '$' && !(k === '$$date' && typeof v === 'number') && !(k === '$$deleted' && v === true) && !(k === '$$indexCreated') && !(k === '$$indexRemoved')) {\n    throw new Error('Field names cannot begin with the $ character');\n  }\n\n  if (k.indexOf('.') !== -1) {\n    throw new Error('Field names cannot contain a .');\n  }\n}\n\n\n/**\n * Check a DB object and throw an error if it's not valid\n * Works by applying the above checkKey function to all fields recursively\n */\nfunction checkObject (obj) {\n  if (util.isArray(obj)) {\n    obj.forEach(function (o) {\n      checkObject(o);\n    });\n  }\n\n  if (typeof obj === 'object' && obj !== null) {\n    Object.keys(obj).forEach(function (k) {\n      checkKey(k, obj[k]);\n      checkObject(obj[k]);\n    });\n  }\n}\n\n\n/**\n * Serialize an object to be persisted to a one-line string\n * For serialization/deserialization, we use the native JSON parser and not eval or Function\n * That gives us less freedom but data entered in the database may come from users\n * so eval and the like are not safe\n * Accepted primitive types: Number, String, Boolean, Date, null\n * Accepted secondary types: Objects, Arrays\n */\nfunction serialize (obj) {\n  var res;\n\n  res = JSON.stringify(obj, function (k, v) {\n    checkKey(k, v);\n\n    if (v === undefined) { return undefined; }\n    if (v === null) { return null; }\n\n    // Hackish way of checking if object is Date (this way it works between execution contexts in node-webkit).\n    // We can't use value directly because for dates it is already string in this function (date.toJSON was already called), so we use this\n    if (typeof this[k].getTime === 'function') { return { $$date: this[k].getTime() }; }\n\n    return v;\n  });\n\n  return res;\n}\n\n\n/**\n * From a one-line representation of an object generate by the serialize function\n * Return the object itself\n */\nfunction deserialize (rawData) {\n  return JSON.parse(rawData, function (k, v) {\n    if (k === '$$date') { return new Date(v); }\n    if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean' || v === null) { return v; }\n    if (v && v.$$date) { return v.$$date; }\n\n    return v;\n  });\n}\n\n\n/**\n * Deep copy a DB object\n * The optional strictKeys flag (defaulting to false) indicates whether to copy everything or only fields\n * where the keys are valid, i.e. don't begin with $ and don't contain a .\n */\nfunction deepCopy (obj, strictKeys) {\n  var res;\n\n  if ( typeof obj === 'boolean' ||\n       typeof obj === 'number' ||\n       typeof obj === 'string' ||\n       obj === null ||\n       (util.isDate(obj)) ) {\n    return obj;\n  }\n\n  if (util.isArray(obj)) {\n    res = [];\n    obj.forEach(function (o) { res.push(deepCopy(o, strictKeys)); });\n    return res;\n  }\n\n  if (typeof obj === 'object') {\n    res = {};\n    Object.keys(obj).forEach(function (k) {\n      if (!strictKeys || (k[0] !== '$' && k.indexOf('.') === -1)) {\n        res[k] = deepCopy(obj[k], strictKeys);\n      }\n    });\n    return res;\n  }\n\n  return undefined;   // For now everything else is undefined. We should probably throw an error instead\n}\n\n\n/**\n * Tells if an object is a primitive type or a \"real\" object\n * Arrays are considered primitive\n */\nfunction isPrimitiveType (obj) {\n  return ( typeof obj === 'boolean' ||\n       typeof obj === 'number' ||\n       typeof obj === 'string' ||\n       obj === null ||\n       util.isDate(obj) ||\n       util.isArray(obj));\n}\n\n\n/**\n * Utility functions for comparing things\n * Assumes type checking was already done (a and b already have the same type)\n * compareNSB works for numbers, strings and booleans\n */\nfunction compareNSB (a, b) {\n  if (a < b) { return -1; }\n  if (a > b) { return 1; }\n  return 0;\n}\n\nfunction compareArrays (a, b) {\n  var i, comp;\n\n  for (i = 0; i < Math.min(a.length, b.length); i += 1) {\n    comp = compareThings(a[i], b[i]);\n\n    if (comp !== 0) { return comp; }\n  }\n\n  // Common section was identical, longest one wins\n  return compareNSB(a.length, b.length);\n}\n\n\n/**\n * Compare { things U undefined }\n * Things are defined as any native types (string, number, boolean, null, date) and objects\n * We need to compare with undefined as it will be used in indexes\n * In the case of objects and arrays, we deep-compare\n * If two objects dont have the same type, the (arbitrary) type hierarchy is: undefined, null, number, strings, boolean, dates, arrays, objects\n * Return -1 if a < b, 1 if a > b and 0 if a = b (note that equality here is NOT the same as defined in areThingsEqual!)\n *\n * @param {Function} _compareStrings String comparing function, returning -1, 0 or 1, overriding default string comparison (useful for languages with accented letters)\n */\nfunction compareThings (a, b, _compareStrings) {\n  var aKeys, bKeys, comp, i\n    , compareStrings = _compareStrings || compareNSB;\n\n  // undefined\n  if (a === undefined) { return b === undefined ? 0 : -1; }\n  if (b === undefined) { return a === undefined ? 0 : 1; }\n\n  // null\n  if (a === null) { return b === null ? 0 : -1; }\n  if (b === null) { return a === null ? 0 : 1; }\n\n  // Numbers\n  if (typeof a === 'number') { return typeof b === 'number' ? compareNSB(a, b) : -1; }\n  if (typeof b === 'number') { return typeof a === 'number' ? compareNSB(a, b) : 1; }\n\n  // Strings\n  if (typeof a === 'string') { return typeof b === 'string' ? compareStrings(a, b) : -1; }\n  if (typeof b === 'string') { return typeof a === 'string' ? compareStrings(a, b) : 1; }\n\n  // Booleans\n  if (typeof a === 'boolean') { return typeof b === 'boolean' ? compareNSB(a, b) : -1; }\n  if (typeof b === 'boolean') { return typeof a === 'boolean' ? compareNSB(a, b) : 1; }\n\n  // Dates\n  if (util.isDate(a)) { return util.isDate(b) ? compareNSB(a.getTime(), b.getTime()) : -1; }\n  if (util.isDate(b)) { return util.isDate(a) ? compareNSB(a.getTime(), b.getTime()) : 1; }\n\n  // Arrays (first element is most significant and so on)\n  if (util.isArray(a)) { return util.isArray(b) ? compareArrays(a, b) : -1; }\n  if (util.isArray(b)) { return util.isArray(a) ? compareArrays(a, b) : 1; }\n\n  // Objects\n  aKeys = Object.keys(a).sort();\n  bKeys = Object.keys(b).sort();\n\n  for (i = 0; i < Math.min(aKeys.length, bKeys.length); i += 1) {\n    comp = compareThings(a[aKeys[i]], b[bKeys[i]]);\n\n    if (comp !== 0) { return comp; }\n  }\n\n  return compareNSB(aKeys.length, bKeys.length);\n}\n\n\n\n// ==============================================================\n// Updating documents\n// ==============================================================\n\n/**\n * The signature of modifier functions is as follows\n * Their structure is always the same: recursively follow the dot notation while creating\n * the nested documents if needed, then apply the \"last step modifier\"\n * @param {Object} obj The model to modify\n * @param {String} field Can contain dots, in that case that means we will set a subfield recursively\n * @param {Model} value\n */\n\n/**\n * Set a field to a new value\n */\nlastStepModifierFunctions.$set = function (obj, field, value) {\n  obj[field] = value;\n};\n\n\n/**\n * Unset a field\n */\nlastStepModifierFunctions.$unset = function (obj, field, value) {\n  delete obj[field];\n};\n\n\n/**\n * Push an element to the end of an array field\n * Optional modifier $each instead of value to push several values\n * Optional modifier $slice to slice the resulting array, see https://docs.mongodb.org/manual/reference/operator/update/slice/\n * DiffÃ©reence with MongoDB: if $slice is specified and not $each, we act as if value is an empty array\n */\nlastStepModifierFunctions.$push = function (obj, field, value) {\n  // Create the array if it doesn't exist\n  if (!obj.hasOwnProperty(field)) { obj[field] = []; }\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $push an element on non-array values\"); }\n\n  if (value !== null && typeof value === 'object' && value.$slice && value.$each === undefined) {\n    value.$each = [];\n  }\n\n  if (value !== null && typeof value === 'object' && value.$each) {\n    if (Object.keys(value).length >= 3 || (Object.keys(value).length === 2 && value.$slice === undefined)) { throw new Error(\"Can only use $slice in cunjunction with $each when $push to array\"); }\n    if (!util.isArray(value.$each)) { throw new Error(\"$each requires an array value\"); }\n\n    value.$each.forEach(function (v) {\n      obj[field].push(v);\n    });\n\n    if (value.$slice === undefined || typeof value.$slice !== 'number') { return; }\n\n    if (value.$slice === 0) {\n      obj[field] = [];\n    } else {\n      var start, end, n = obj[field].length;\n      if (value.$slice < 0) {\n        start = Math.max(0, n + value.$slice);\n        end = n;\n      } else if (value.$slice > 0) {\n        start = 0;\n        end = Math.min(n, value.$slice);\n      }\n      obj[field] = obj[field].slice(start, end);\n    }\n  } else {\n    obj[field].push(value);\n  }\n};\n\n\n/**\n * Add an element to an array field only if it is not already in it\n * No modification if the element is already in the array\n * Note that it doesn't check whether the original array contains duplicates\n */\nlastStepModifierFunctions.$addToSet = function (obj, field, value) {\n  var addToSet = true;\n\n  // Create the array if it doesn't exist\n  if (!obj.hasOwnProperty(field)) { obj[field] = []; }\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $addToSet an element on non-array values\"); }\n\n  if (value !== null && typeof value === 'object' && value.$each) {\n    if (Object.keys(value).length > 1) { throw new Error(\"Can't use another field in conjunction with $each\"); }\n    if (!util.isArray(value.$each)) { throw new Error(\"$each requires an array value\"); }\n\n    value.$each.forEach(function (v) {\n      lastStepModifierFunctions.$addToSet(obj, field, v);\n    });\n  } else {\n    obj[field].forEach(function (v) {\n      if (compareThings(v, value) === 0) { addToSet = false; }\n    });\n    if (addToSet) { obj[field].push(value); }\n  }\n};\n\n\n/**\n * Remove the first or last element of an array\n */\nlastStepModifierFunctions.$pop = function (obj, field, value) {\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $pop an element from non-array values\"); }\n  if (typeof value !== 'number') { throw new Error(value + \" isn't an integer, can't use it with $pop\"); }\n  if (value === 0) { return; }\n\n  if (value > 0) {\n    obj[field] = obj[field].slice(0, obj[field].length - 1);\n  } else {\n    obj[field] = obj[field].slice(1);\n  }\n};\n\n\n/**\n * Removes all instances of a value from an existing array\n */\nlastStepModifierFunctions.$pull = function (obj, field, value) {\n  var arr, i;\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $pull an element from non-array values\"); }\n\n  arr = obj[field];\n  for (i = arr.length - 1; i >= 0; i -= 1) {\n    if (match(arr[i], value)) {\n      arr.splice(i, 1);\n    }\n  }\n};\n\n\n/**\n * Increment a numeric field's value\n */\nlastStepModifierFunctions.$inc = function (obj, field, value) {\n  if (typeof value !== 'number') { throw new Error(value + \" must be a number\"); }\n\n  if (typeof obj[field] !== 'number') {\n    if (!_.has(obj, field)) {\n      obj[field] = value;\n    } else {\n      throw new Error(\"Don't use the $inc modifier on non-number fields\");\n    }\n  } else {\n    obj[field] += value;\n  }\n};\n\n/**\n * Updates the value of the field, only if specified field is greater than the current value of the field\n */\nlastStepModifierFunctions.$max = function (obj, field, value) {\n  if (typeof obj[field] === 'undefined') {\n    obj[field] = value;\n  } else if (value > obj[field]) {\n    obj[field] = value;\n  }\n};\n\n/**\n * Updates the value of the field, only if specified field is smaller than the current value of the field\n */\nlastStepModifierFunctions.$min = function (obj, field, value) {\n  if (typeof obj[field] === 'undefined') {Â \n    obj[field] = value;\n  } else if (value < obj[field]) {\n    obj[field] = value;\n  }\n};\n\n// Given its name, create the complete modifier function\nfunction createModifierFunction (modifier) {\n  return function (obj, field, value) {\n    var fieldParts = typeof field === 'string' ? field.split('.') : field;\n\n    if (fieldParts.length === 1) {\n      lastStepModifierFunctions[modifier](obj, field, value);\n    } else {\n      if (obj[fieldParts[0]] === undefined) {\n        if (modifier === '$unset') { return; }   // Bad looking specific fix, needs to be generalized modifiers that behave like $unset are implemented\n        obj[fieldParts[0]] = {};\n      }\n      modifierFunctions[modifier](obj[fieldParts[0]], fieldParts.slice(1), value);\n    }\n  };\n}\n\n// Actually create all modifier functions\nObject.keys(lastStepModifierFunctions).forEach(function (modifier) {\n  modifierFunctions[modifier] = createModifierFunction(modifier);\n});\n\n\n/**\n * Modify a DB object according to an update query\n */\nfunction modify (obj, updateQuery) {\n  var keys = Object.keys(updateQuery)\n    , firstChars = _.map(keys, function (item) { return item[0]; })\n    , dollarFirstChars = _.filter(firstChars, function (c) { return c === '$'; })\n    , newDoc, modifiers\n    ;\n\n  if (keys.indexOf('_id') !== -1 && updateQuery._id !== obj._id) { throw new Error(\"You cannot change a document's _id\"); }\n\n  if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) {\n    throw new Error(\"You cannot mix modifiers and normal fields\");\n  }\n\n  if (dollarFirstChars.length === 0) {\n    // Simply replace the object with the update query contents\n    newDoc = deepCopy(updateQuery);\n    newDoc._id = obj._id;\n  } else {\n    // Apply modifiers\n    modifiers = _.uniq(keys);\n    newDoc = deepCopy(obj);\n    modifiers.forEach(function (m) {\n      var keys;\n\n      if (!modifierFunctions[m]) { throw new Error(\"Unknown modifier \" + m); }\n\n      // Can't rely on Object.keys throwing on non objects since ES6\n      // Not 100% satisfying as non objects can be interpreted as objects but no false negatives so we can live with it\n      if (typeof updateQuery[m] !== 'object') {\n        throw new Error(\"Modifier \" + m + \"'s argument must be an object\");\n      }\n\n      keys = Object.keys(updateQuery[m]);\n      keys.forEach(function (k) {\n        modifierFunctions[m](newDoc, k, updateQuery[m][k]);\n      });\n    });\n  }\n\n  // Check result is valid and return it\n  checkObject(newDoc);\n\n  if (obj._id !== newDoc._id) { throw new Error(\"You can't change a document's _id\"); }\n  return newDoc;\n};\n\n\n// ==============================================================\n// Finding documents\n// ==============================================================\n\n/**\n * Get a value from object with dot notation\n * @param {Object} obj\n * @param {String} field\n */\nfunction getDotValue (obj, field) {\n  var fieldParts = typeof field === 'string' ? field.split('.') : field\n    , i, objs;\n\n  if (!obj) { return undefined; }   // field cannot be empty so that means we should return undefined so that nothing can match\n\n  if (fieldParts.length === 0) { return obj; }\n\n  if (fieldParts.length === 1) { return obj[fieldParts[0]]; }\n\n  if (util.isArray(obj[fieldParts[0]])) {\n    // If the next field is an integer, return only this item of the array\n    i = parseInt(fieldParts[1], 10);\n    if (typeof i === 'number' && !isNaN(i)) {\n      return getDotValue(obj[fieldParts[0]][i], fieldParts.slice(2))\n    }\n\n    // Return the array of values\n    objs = new Array();\n    for (i = 0; i < obj[fieldParts[0]].length; i += 1) {\n       objs.push(getDotValue(obj[fieldParts[0]][i], fieldParts.slice(1)));\n    }\n    return objs;\n  } else {\n    return getDotValue(obj[fieldParts[0]], fieldParts.slice(1));\n  }\n}\n\n\n/**\n * Check whether 'things' are equal\n * Things are defined as any native types (string, number, boolean, null, date) and objects\n * In the case of object, we check deep equality\n * Returns true if they are, false otherwise\n */\nfunction areThingsEqual (a, b) {\n  var aKeys , bKeys , i;\n\n  // Strings, booleans, numbers, null\n  if (a === null || typeof a === 'string' || typeof a === 'boolean' || typeof a === 'number' ||\n      b === null || typeof b === 'string' || typeof b === 'boolean' || typeof b === 'number') { return a === b; }\n\n  // Dates\n  if (util.isDate(a) || util.isDate(b)) { return util.isDate(a) && util.isDate(b) && a.getTime() === b.getTime(); }\n\n  // Arrays (no match since arrays are used as a $in)\n  // undefined (no match since they mean field doesn't exist and can't be serialized)\n  if ((!(util.isArray(a) && util.isArray(b)) && (util.isArray(a) || util.isArray(b))) || a === undefined || b === undefined) { return false; }\n\n  // General objects (check for deep equality)\n  // a and b should be objects at this point\n  try {\n    aKeys = Object.keys(a);\n    bKeys = Object.keys(b);\n  } catch (e) {\n    return false;\n  }\n\n  if (aKeys.length !== bKeys.length) { return false; }\n  for (i = 0; i < aKeys.length; i += 1) {\n    if (bKeys.indexOf(aKeys[i]) === -1) { return false; }\n    if (!areThingsEqual(a[aKeys[i]], b[aKeys[i]])) { return false; }\n  }\n  return true;\n}\n\n\n/**\n * Check that two values are comparable\n */\nfunction areComparable (a, b) {\n  if (typeof a !== 'string' && typeof a !== 'number' && !util.isDate(a) &&\n      typeof b !== 'string' && typeof b !== 'number' && !util.isDate(b)) {\n    return false;\n  }\n\n  if (typeof a !== typeof b) { return false; }\n\n  return true;\n}\n\n\n/**\n * Arithmetic and comparison operators\n * @param {Native value} a Value in the object\n * @param {Native value} b Value in the query\n */\ncomparisonFunctions.$lt = function (a, b) {\n  return areComparable(a, b) && a < b;\n};\n\ncomparisonFunctions.$lte = function (a, b) {\n  return areComparable(a, b) && a <= b;\n};\n\ncomparisonFunctions.$gt = function (a, b) {\n  return areComparable(a, b) && a > b;\n};\n\ncomparisonFunctions.$gte = function (a, b) {\n  return areComparable(a, b) && a >= b;\n};\n\ncomparisonFunctions.$ne = function (a, b) {\n  if (a === undefined) { return true; }\n  return !areThingsEqual(a, b);\n};\n\ncomparisonFunctions.$in = function (a, b) {\n  var i;\n\n  if (!util.isArray(b)) { throw new Error(\"$in operator called with a non-array\"); }\n\n  for (i = 0; i < b.length; i += 1) {\n    if (areThingsEqual(a, b[i])) { return true; }\n  }\n\n  return false;\n};\n\ncomparisonFunctions.$nin = function (a, b) {\n  if (!util.isArray(b)) { throw new Error(\"$nin operator called with a non-array\"); }\n\n  return !comparisonFunctions.$in(a, b);\n};\n\ncomparisonFunctions.$regex = function (a, b) {\n  if (!util.isRegExp(b)) { throw new Error(\"$regex operator called with non regular expression\"); }\n\n  if (typeof a !== 'string') {\n    return false\n  } else {\n    return b.test(a);\n  }\n};\n\ncomparisonFunctions.$exists = function (value, exists) {\n  if (exists || exists === '') {   // This will be true for all values of exists except false, null, undefined and 0\n    exists = true;                 // That's strange behaviour (we should only use true/false) but that's the way Mongo does it...\n  } else {\n    exists = false;\n  }\n\n  if (value === undefined) {\n    return !exists\n  } else {\n    return exists;\n  }\n};\n\n// Specific to arrays\ncomparisonFunctions.$size = function (obj, value) {\n    if (!util.isArray(obj)) { return false; }\n    if (value % 1 !== 0) { throw new Error(\"$size operator called without an integer\"); }\n\n    return (obj.length == value);\n};\ncomparisonFunctions.$elemMatch = function (obj, value) {\n  if (!util.isArray(obj)) { return false; }\n  var i = obj.length;\n  var result = false;   // Initialize result\n  while (i--) {\n    if (match(obj[i], value)) {   // If match for array element, return true\n      result = true;\n      break;\n    }\n  }\n  return result;\n};\narrayComparisonFunctions.$size = true;\narrayComparisonFunctions.$elemMatch = true;\n\n\n/**\n * Match any of the subqueries\n * @param {Model} obj\n * @param {Array of Queries} query\n */\nlogicalOperators.$or = function (obj, query) {\n  var i;\n\n  if (!util.isArray(query)) { throw new Error(\"$or operator used without an array\"); }\n\n  for (i = 0; i < query.length; i += 1) {\n    if (match(obj, query[i])) { return true; }\n  }\n\n  return false;\n};\n\n\n/**\n * Match all of the subqueries\n * @param {Model} obj\n * @param {Array of Queries} query\n */\nlogicalOperators.$and = function (obj, query) {\n  var i;\n\n  if (!util.isArray(query)) { throw new Error(\"$and operator used without an array\"); }\n\n  for (i = 0; i < query.length; i += 1) {\n    if (!match(obj, query[i])) { return false; }\n  }\n\n  return true;\n};\n\n\n/**\n * Inverted match of the query\n * @param {Model} obj\n * @param {Query} query\n */\nlogicalOperators.$not = function (obj, query) {\n  return !match(obj, query);\n};\n\n\n/**\n * Use a function to match\n * @param {Model} obj\n * @param {Query} query\n */\nlogicalOperators.$where = function (obj, fn) {\n  var result;\n\n  if (!_.isFunction(fn)) { throw new Error(\"$where operator used without a function\"); }\n\n  result = fn.call(obj);\n  if (!_.isBoolean(result)) { throw new Error(\"$where function must return boolean\"); }\n\n  return result;\n};\n\n\n/**\n * Tell if a given document matches a query\n * @param {Object} obj Document to check\n * @param {Object} query\n */\nfunction match (obj, query) {\n  var queryKeys, queryKey, queryValue, i;\n\n  // Primitive query against a primitive type\n  // This is a bit of a hack since we construct an object with an arbitrary key only to dereference it later\n  // But I don't have time for a cleaner implementation now\n  if (isPrimitiveType(obj) || isPrimitiveType(query)) {\n    return matchQueryPart({ needAKey: obj }, 'needAKey', query);\n  }\n\n  // Normal query\n  queryKeys = Object.keys(query);\n  for (i = 0; i < queryKeys.length; i += 1) {\n    queryKey = queryKeys[i];\n    queryValue = query[queryKey];\n\n    if (queryKey[0] === '$') {\n      if (!logicalOperators[queryKey]) { throw new Error(\"Unknown logical operator \" + queryKey); }\n      if (!logicalOperators[queryKey](obj, queryValue)) { return false; }\n    } else {\n      if (!matchQueryPart(obj, queryKey, queryValue)) { return false; }\n    }\n  }\n\n  return true;\n};\n\n\n/**\n * Match an object against a specific { key: value } part of a query\n * if the treatObjAsValue flag is set, don't try to match every part separately, but the array as a whole\n */\nfunction matchQueryPart (obj, queryKey, queryValue, treatObjAsValue) {\n  var objValue = getDotValue(obj, queryKey)\n    , i, keys, firstChars, dollarFirstChars;\n\n  // Check if the value is an array if we don't force a treatment as value\n  if (util.isArray(objValue) && !treatObjAsValue) {\n    // If the queryValue is an array, try to perform an exact match\n    if (util.isArray(queryValue)) {\n      return matchQueryPart(obj, queryKey, queryValue, true);\n    }\n\n    // Check if we are using an array-specific comparison function\n    if (queryValue !== null && typeof queryValue === 'object' && !util.isRegExp(queryValue)) {\n      keys = Object.keys(queryValue);\n      for (i = 0; i < keys.length; i += 1) {\n        if (arrayComparisonFunctions[keys[i]]) { return matchQueryPart(obj, queryKey, queryValue, true); }\n      }\n    }\n\n    // If not, treat it as an array of { obj, query } where there needs to be at least one match\n    for (i = 0; i < objValue.length; i += 1) {\n      if (matchQueryPart({ k: objValue[i] }, 'k', queryValue)) { return true; }   // k here could be any string\n    }\n    return false;\n  }\n\n  // queryValue is an actual object. Determine whether it contains comparison operators\n  // or only normal fields. Mixed objects are not allowed\n  if (queryValue !== null && typeof queryValue === 'object' && !util.isRegExp(queryValue) && !util.isArray(queryValue)) {\n    keys = Object.keys(queryValue);\n    firstChars = _.map(keys, function (item) { return item[0]; });\n    dollarFirstChars = _.filter(firstChars, function (c) { return c === '$'; });\n\n    if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) {\n      throw new Error(\"You cannot mix operators and normal fields\");\n    }\n\n    // queryValue is an object of this form: { $comparisonOperator1: value1, ... }\n    if (dollarFirstChars.length > 0) {\n      for (i = 0; i < keys.length; i += 1) {\n        if (!comparisonFunctions[keys[i]]) { throw new Error(\"Unknown comparison function \" + keys[i]); }\n\n        if (!comparisonFunctions[keys[i]](objValue, queryValue[keys[i]])) { return false; }\n      }\n      return true;\n    }\n  }\n\n  // Using regular expressions with basic querying\n  if (util.isRegExp(queryValue)) { return comparisonFunctions.$regex(objValue, queryValue); }\n\n  // queryValue is either a native value or a normal object\n  // Basic matching is possible\n  if (!areThingsEqual(objValue, queryValue)) { return false; }\n\n  return true;\n}\n\n\n// Interface\nmodule.exports.serialize = serialize;\nmodule.exports.deserialize = deserialize;\nmodule.exports.deepCopy = deepCopy;\nmodule.exports.checkObject = checkObject;\nmodule.exports.isPrimitiveType = isPrimitiveType;\nmodule.exports.modify = modify;\nmodule.exports.getDotValue = getDotValue;\nmodule.exports.match = match;\nmodule.exports.areThingsEqual = areThingsEqual;\nmodule.exports.compareThings = compareThings;\n","map":{"mappings":[{"source":"../node_modules/nedb/lib/model.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/nedb/lib/model.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}}],"sources":{"../node_modules/nedb/lib/model.js":"/**\n * Handle models (i.e. docs)\n * Serialization/deserialization\n * Copying\n * Querying, update\n */\n\nvar util = require('util')\n  , _ = require('underscore')\n  , modifierFunctions = {}\n  , lastStepModifierFunctions = {}\n  , comparisonFunctions = {}\n  , logicalOperators = {}\n  , arrayComparisonFunctions = {}\n  ;\n\n\n/**\n * Check a key, throw an error if the key is non valid\n * @param {String} k key\n * @param {Model} v value, needed to treat the Date edge case\n * Non-treatable edge cases here: if part of the object if of the form { $$date: number } or { $$deleted: true }\n * Its serialized-then-deserialized version it will transformed into a Date object\n * But you really need to want it to trigger such behaviour, even when warned not to use '$' at the beginning of the field names...\n */\nfunction checkKey (k, v) {\n  if (typeof k === 'number') {\n    k = k.toString();\n  }\n\n  if (k[0] === '$' && !(k === '$$date' && typeof v === 'number') && !(k === '$$deleted' && v === true) && !(k === '$$indexCreated') && !(k === '$$indexRemoved')) {\n    throw new Error('Field names cannot begin with the $ character');\n  }\n\n  if (k.indexOf('.') !== -1) {\n    throw new Error('Field names cannot contain a .');\n  }\n}\n\n\n/**\n * Check a DB object and throw an error if it's not valid\n * Works by applying the above checkKey function to all fields recursively\n */\nfunction checkObject (obj) {\n  if (util.isArray(obj)) {\n    obj.forEach(function (o) {\n      checkObject(o);\n    });\n  }\n\n  if (typeof obj === 'object' && obj !== null) {\n    Object.keys(obj).forEach(function (k) {\n      checkKey(k, obj[k]);\n      checkObject(obj[k]);\n    });\n  }\n}\n\n\n/**\n * Serialize an object to be persisted to a one-line string\n * For serialization/deserialization, we use the native JSON parser and not eval or Function\n * That gives us less freedom but data entered in the database may come from users\n * so eval and the like are not safe\n * Accepted primitive types: Number, String, Boolean, Date, null\n * Accepted secondary types: Objects, Arrays\n */\nfunction serialize (obj) {\n  var res;\n\n  res = JSON.stringify(obj, function (k, v) {\n    checkKey(k, v);\n\n    if (v === undefined) { return undefined; }\n    if (v === null) { return null; }\n\n    // Hackish way of checking if object is Date (this way it works between execution contexts in node-webkit).\n    // We can't use value directly because for dates it is already string in this function (date.toJSON was already called), so we use this\n    if (typeof this[k].getTime === 'function') { return { $$date: this[k].getTime() }; }\n\n    return v;\n  });\n\n  return res;\n}\n\n\n/**\n * From a one-line representation of an object generate by the serialize function\n * Return the object itself\n */\nfunction deserialize (rawData) {\n  return JSON.parse(rawData, function (k, v) {\n    if (k === '$$date') { return new Date(v); }\n    if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean' || v === null) { return v; }\n    if (v && v.$$date) { return v.$$date; }\n\n    return v;\n  });\n}\n\n\n/**\n * Deep copy a DB object\n * The optional strictKeys flag (defaulting to false) indicates whether to copy everything or only fields\n * where the keys are valid, i.e. don't begin with $ and don't contain a .\n */\nfunction deepCopy (obj, strictKeys) {\n  var res;\n\n  if ( typeof obj === 'boolean' ||\n       typeof obj === 'number' ||\n       typeof obj === 'string' ||\n       obj === null ||\n       (util.isDate(obj)) ) {\n    return obj;\n  }\n\n  if (util.isArray(obj)) {\n    res = [];\n    obj.forEach(function (o) { res.push(deepCopy(o, strictKeys)); });\n    return res;\n  }\n\n  if (typeof obj === 'object') {\n    res = {};\n    Object.keys(obj).forEach(function (k) {\n      if (!strictKeys || (k[0] !== '$' && k.indexOf('.') === -1)) {\n        res[k] = deepCopy(obj[k], strictKeys);\n      }\n    });\n    return res;\n  }\n\n  return undefined;   // For now everything else is undefined. We should probably throw an error instead\n}\n\n\n/**\n * Tells if an object is a primitive type or a \"real\" object\n * Arrays are considered primitive\n */\nfunction isPrimitiveType (obj) {\n  return ( typeof obj === 'boolean' ||\n       typeof obj === 'number' ||\n       typeof obj === 'string' ||\n       obj === null ||\n       util.isDate(obj) ||\n       util.isArray(obj));\n}\n\n\n/**\n * Utility functions for comparing things\n * Assumes type checking was already done (a and b already have the same type)\n * compareNSB works for numbers, strings and booleans\n */\nfunction compareNSB (a, b) {\n  if (a < b) { return -1; }\n  if (a > b) { return 1; }\n  return 0;\n}\n\nfunction compareArrays (a, b) {\n  var i, comp;\n\n  for (i = 0; i < Math.min(a.length, b.length); i += 1) {\n    comp = compareThings(a[i], b[i]);\n\n    if (comp !== 0) { return comp; }\n  }\n\n  // Common section was identical, longest one wins\n  return compareNSB(a.length, b.length);\n}\n\n\n/**\n * Compare { things U undefined }\n * Things are defined as any native types (string, number, boolean, null, date) and objects\n * We need to compare with undefined as it will be used in indexes\n * In the case of objects and arrays, we deep-compare\n * If two objects dont have the same type, the (arbitrary) type hierarchy is: undefined, null, number, strings, boolean, dates, arrays, objects\n * Return -1 if a < b, 1 if a > b and 0 if a = b (note that equality here is NOT the same as defined in areThingsEqual!)\n *\n * @param {Function} _compareStrings String comparing function, returning -1, 0 or 1, overriding default string comparison (useful for languages with accented letters)\n */\nfunction compareThings (a, b, _compareStrings) {\n  var aKeys, bKeys, comp, i\n    , compareStrings = _compareStrings || compareNSB;\n\n  // undefined\n  if (a === undefined) { return b === undefined ? 0 : -1; }\n  if (b === undefined) { return a === undefined ? 0 : 1; }\n\n  // null\n  if (a === null) { return b === null ? 0 : -1; }\n  if (b === null) { return a === null ? 0 : 1; }\n\n  // Numbers\n  if (typeof a === 'number') { return typeof b === 'number' ? compareNSB(a, b) : -1; }\n  if (typeof b === 'number') { return typeof a === 'number' ? compareNSB(a, b) : 1; }\n\n  // Strings\n  if (typeof a === 'string') { return typeof b === 'string' ? compareStrings(a, b) : -1; }\n  if (typeof b === 'string') { return typeof a === 'string' ? compareStrings(a, b) : 1; }\n\n  // Booleans\n  if (typeof a === 'boolean') { return typeof b === 'boolean' ? compareNSB(a, b) : -1; }\n  if (typeof b === 'boolean') { return typeof a === 'boolean' ? compareNSB(a, b) : 1; }\n\n  // Dates\n  if (util.isDate(a)) { return util.isDate(b) ? compareNSB(a.getTime(), b.getTime()) : -1; }\n  if (util.isDate(b)) { return util.isDate(a) ? compareNSB(a.getTime(), b.getTime()) : 1; }\n\n  // Arrays (first element is most significant and so on)\n  if (util.isArray(a)) { return util.isArray(b) ? compareArrays(a, b) : -1; }\n  if (util.isArray(b)) { return util.isArray(a) ? compareArrays(a, b) : 1; }\n\n  // Objects\n  aKeys = Object.keys(a).sort();\n  bKeys = Object.keys(b).sort();\n\n  for (i = 0; i < Math.min(aKeys.length, bKeys.length); i += 1) {\n    comp = compareThings(a[aKeys[i]], b[bKeys[i]]);\n\n    if (comp !== 0) { return comp; }\n  }\n\n  return compareNSB(aKeys.length, bKeys.length);\n}\n\n\n\n// ==============================================================\n// Updating documents\n// ==============================================================\n\n/**\n * The signature of modifier functions is as follows\n * Their structure is always the same: recursively follow the dot notation while creating\n * the nested documents if needed, then apply the \"last step modifier\"\n * @param {Object} obj The model to modify\n * @param {String} field Can contain dots, in that case that means we will set a subfield recursively\n * @param {Model} value\n */\n\n/**\n * Set a field to a new value\n */\nlastStepModifierFunctions.$set = function (obj, field, value) {\n  obj[field] = value;\n};\n\n\n/**\n * Unset a field\n */\nlastStepModifierFunctions.$unset = function (obj, field, value) {\n  delete obj[field];\n};\n\n\n/**\n * Push an element to the end of an array field\n * Optional modifier $each instead of value to push several values\n * Optional modifier $slice to slice the resulting array, see https://docs.mongodb.org/manual/reference/operator/update/slice/\n * DiffÃ©reence with MongoDB: if $slice is specified and not $each, we act as if value is an empty array\n */\nlastStepModifierFunctions.$push = function (obj, field, value) {\n  // Create the array if it doesn't exist\n  if (!obj.hasOwnProperty(field)) { obj[field] = []; }\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $push an element on non-array values\"); }\n\n  if (value !== null && typeof value === 'object' && value.$slice && value.$each === undefined) {\n    value.$each = [];\n  }\n\n  if (value !== null && typeof value === 'object' && value.$each) {\n    if (Object.keys(value).length >= 3 || (Object.keys(value).length === 2 && value.$slice === undefined)) { throw new Error(\"Can only use $slice in cunjunction with $each when $push to array\"); }\n    if (!util.isArray(value.$each)) { throw new Error(\"$each requires an array value\"); }\n\n    value.$each.forEach(function (v) {\n      obj[field].push(v);\n    });\n\n    if (value.$slice === undefined || typeof value.$slice !== 'number') { return; }\n\n    if (value.$slice === 0) {\n      obj[field] = [];\n    } else {\n      var start, end, n = obj[field].length;\n      if (value.$slice < 0) {\n        start = Math.max(0, n + value.$slice);\n        end = n;\n      } else if (value.$slice > 0) {\n        start = 0;\n        end = Math.min(n, value.$slice);\n      }\n      obj[field] = obj[field].slice(start, end);\n    }\n  } else {\n    obj[field].push(value);\n  }\n};\n\n\n/**\n * Add an element to an array field only if it is not already in it\n * No modification if the element is already in the array\n * Note that it doesn't check whether the original array contains duplicates\n */\nlastStepModifierFunctions.$addToSet = function (obj, field, value) {\n  var addToSet = true;\n\n  // Create the array if it doesn't exist\n  if (!obj.hasOwnProperty(field)) { obj[field] = []; }\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $addToSet an element on non-array values\"); }\n\n  if (value !== null && typeof value === 'object' && value.$each) {\n    if (Object.keys(value).length > 1) { throw new Error(\"Can't use another field in conjunction with $each\"); }\n    if (!util.isArray(value.$each)) { throw new Error(\"$each requires an array value\"); }\n\n    value.$each.forEach(function (v) {\n      lastStepModifierFunctions.$addToSet(obj, field, v);\n    });\n  } else {\n    obj[field].forEach(function (v) {\n      if (compareThings(v, value) === 0) { addToSet = false; }\n    });\n    if (addToSet) { obj[field].push(value); }\n  }\n};\n\n\n/**\n * Remove the first or last element of an array\n */\nlastStepModifierFunctions.$pop = function (obj, field, value) {\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $pop an element from non-array values\"); }\n  if (typeof value !== 'number') { throw new Error(value + \" isn't an integer, can't use it with $pop\"); }\n  if (value === 0) { return; }\n\n  if (value > 0) {\n    obj[field] = obj[field].slice(0, obj[field].length - 1);\n  } else {\n    obj[field] = obj[field].slice(1);\n  }\n};\n\n\n/**\n * Removes all instances of a value from an existing array\n */\nlastStepModifierFunctions.$pull = function (obj, field, value) {\n  var arr, i;\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $pull an element from non-array values\"); }\n\n  arr = obj[field];\n  for (i = arr.length - 1; i >= 0; i -= 1) {\n    if (match(arr[i], value)) {\n      arr.splice(i, 1);\n    }\n  }\n};\n\n\n/**\n * Increment a numeric field's value\n */\nlastStepModifierFunctions.$inc = function (obj, field, value) {\n  if (typeof value !== 'number') { throw new Error(value + \" must be a number\"); }\n\n  if (typeof obj[field] !== 'number') {\n    if (!_.has(obj, field)) {\n      obj[field] = value;\n    } else {\n      throw new Error(\"Don't use the $inc modifier on non-number fields\");\n    }\n  } else {\n    obj[field] += value;\n  }\n};\n\n/**\n * Updates the value of the field, only if specified field is greater than the current value of the field\n */\nlastStepModifierFunctions.$max = function (obj, field, value) {\n  if (typeof obj[field] === 'undefined') {\n    obj[field] = value;\n  } else if (value > obj[field]) {\n    obj[field] = value;\n  }\n};\n\n/**\n * Updates the value of the field, only if specified field is smaller than the current value of the field\n */\nlastStepModifierFunctions.$min = function (obj, field, value) {\n  if (typeof obj[field] === 'undefined') {Â \n    obj[field] = value;\n  } else if (value < obj[field]) {\n    obj[field] = value;\n  }\n};\n\n// Given its name, create the complete modifier function\nfunction createModifierFunction (modifier) {\n  return function (obj, field, value) {\n    var fieldParts = typeof field === 'string' ? field.split('.') : field;\n\n    if (fieldParts.length === 1) {\n      lastStepModifierFunctions[modifier](obj, field, value);\n    } else {\n      if (obj[fieldParts[0]] === undefined) {\n        if (modifier === '$unset') { return; }   // Bad looking specific fix, needs to be generalized modifiers that behave like $unset are implemented\n        obj[fieldParts[0]] = {};\n      }\n      modifierFunctions[modifier](obj[fieldParts[0]], fieldParts.slice(1), value);\n    }\n  };\n}\n\n// Actually create all modifier functions\nObject.keys(lastStepModifierFunctions).forEach(function (modifier) {\n  modifierFunctions[modifier] = createModifierFunction(modifier);\n});\n\n\n/**\n * Modify a DB object according to an update query\n */\nfunction modify (obj, updateQuery) {\n  var keys = Object.keys(updateQuery)\n    , firstChars = _.map(keys, function (item) { return item[0]; })\n    , dollarFirstChars = _.filter(firstChars, function (c) { return c === '$'; })\n    , newDoc, modifiers\n    ;\n\n  if (keys.indexOf('_id') !== -1 && updateQuery._id !== obj._id) { throw new Error(\"You cannot change a document's _id\"); }\n\n  if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) {\n    throw new Error(\"You cannot mix modifiers and normal fields\");\n  }\n\n  if (dollarFirstChars.length === 0) {\n    // Simply replace the object with the update query contents\n    newDoc = deepCopy(updateQuery);\n    newDoc._id = obj._id;\n  } else {\n    // Apply modifiers\n    modifiers = _.uniq(keys);\n    newDoc = deepCopy(obj);\n    modifiers.forEach(function (m) {\n      var keys;\n\n      if (!modifierFunctions[m]) { throw new Error(\"Unknown modifier \" + m); }\n\n      // Can't rely on Object.keys throwing on non objects since ES6\n      // Not 100% satisfying as non objects can be interpreted as objects but no false negatives so we can live with it\n      if (typeof updateQuery[m] !== 'object') {\n        throw new Error(\"Modifier \" + m + \"'s argument must be an object\");\n      }\n\n      keys = Object.keys(updateQuery[m]);\n      keys.forEach(function (k) {\n        modifierFunctions[m](newDoc, k, updateQuery[m][k]);\n      });\n    });\n  }\n\n  // Check result is valid and return it\n  checkObject(newDoc);\n\n  if (obj._id !== newDoc._id) { throw new Error(\"You can't change a document's _id\"); }\n  return newDoc;\n};\n\n\n// ==============================================================\n// Finding documents\n// ==============================================================\n\n/**\n * Get a value from object with dot notation\n * @param {Object} obj\n * @param {String} field\n */\nfunction getDotValue (obj, field) {\n  var fieldParts = typeof field === 'string' ? field.split('.') : field\n    , i, objs;\n\n  if (!obj) { return undefined; }   // field cannot be empty so that means we should return undefined so that nothing can match\n\n  if (fieldParts.length === 0) { return obj; }\n\n  if (fieldParts.length === 1) { return obj[fieldParts[0]]; }\n\n  if (util.isArray(obj[fieldParts[0]])) {\n    // If the next field is an integer, return only this item of the array\n    i = parseInt(fieldParts[1], 10);\n    if (typeof i === 'number' && !isNaN(i)) {\n      return getDotValue(obj[fieldParts[0]][i], fieldParts.slice(2))\n    }\n\n    // Return the array of values\n    objs = new Array();\n    for (i = 0; i < obj[fieldParts[0]].length; i += 1) {\n       objs.push(getDotValue(obj[fieldParts[0]][i], fieldParts.slice(1)));\n    }\n    return objs;\n  } else {\n    return getDotValue(obj[fieldParts[0]], fieldParts.slice(1));\n  }\n}\n\n\n/**\n * Check whether 'things' are equal\n * Things are defined as any native types (string, number, boolean, null, date) and objects\n * In the case of object, we check deep equality\n * Returns true if they are, false otherwise\n */\nfunction areThingsEqual (a, b) {\n  var aKeys , bKeys , i;\n\n  // Strings, booleans, numbers, null\n  if (a === null || typeof a === 'string' || typeof a === 'boolean' || typeof a === 'number' ||\n      b === null || typeof b === 'string' || typeof b === 'boolean' || typeof b === 'number') { return a === b; }\n\n  // Dates\n  if (util.isDate(a) || util.isDate(b)) { return util.isDate(a) && util.isDate(b) && a.getTime() === b.getTime(); }\n\n  // Arrays (no match since arrays are used as a $in)\n  // undefined (no match since they mean field doesn't exist and can't be serialized)\n  if ((!(util.isArray(a) && util.isArray(b)) && (util.isArray(a) || util.isArray(b))) || a === undefined || b === undefined) { return false; }\n\n  // General objects (check for deep equality)\n  // a and b should be objects at this point\n  try {\n    aKeys = Object.keys(a);\n    bKeys = Object.keys(b);\n  } catch (e) {\n    return false;\n  }\n\n  if (aKeys.length !== bKeys.length) { return false; }\n  for (i = 0; i < aKeys.length; i += 1) {\n    if (bKeys.indexOf(aKeys[i]) === -1) { return false; }\n    if (!areThingsEqual(a[aKeys[i]], b[aKeys[i]])) { return false; }\n  }\n  return true;\n}\n\n\n/**\n * Check that two values are comparable\n */\nfunction areComparable (a, b) {\n  if (typeof a !== 'string' && typeof a !== 'number' && !util.isDate(a) &&\n      typeof b !== 'string' && typeof b !== 'number' && !util.isDate(b)) {\n    return false;\n  }\n\n  if (typeof a !== typeof b) { return false; }\n\n  return true;\n}\n\n\n/**\n * Arithmetic and comparison operators\n * @param {Native value} a Value in the object\n * @param {Native value} b Value in the query\n */\ncomparisonFunctions.$lt = function (a, b) {\n  return areComparable(a, b) && a < b;\n};\n\ncomparisonFunctions.$lte = function (a, b) {\n  return areComparable(a, b) && a <= b;\n};\n\ncomparisonFunctions.$gt = function (a, b) {\n  return areComparable(a, b) && a > b;\n};\n\ncomparisonFunctions.$gte = function (a, b) {\n  return areComparable(a, b) && a >= b;\n};\n\ncomparisonFunctions.$ne = function (a, b) {\n  if (a === undefined) { return true; }\n  return !areThingsEqual(a, b);\n};\n\ncomparisonFunctions.$in = function (a, b) {\n  var i;\n\n  if (!util.isArray(b)) { throw new Error(\"$in operator called with a non-array\"); }\n\n  for (i = 0; i < b.length; i += 1) {\n    if (areThingsEqual(a, b[i])) { return true; }\n  }\n\n  return false;\n};\n\ncomparisonFunctions.$nin = function (a, b) {\n  if (!util.isArray(b)) { throw new Error(\"$nin operator called with a non-array\"); }\n\n  return !comparisonFunctions.$in(a, b);\n};\n\ncomparisonFunctions.$regex = function (a, b) {\n  if (!util.isRegExp(b)) { throw new Error(\"$regex operator called with non regular expression\"); }\n\n  if (typeof a !== 'string') {\n    return false\n  } else {\n    return b.test(a);\n  }\n};\n\ncomparisonFunctions.$exists = function (value, exists) {\n  if (exists || exists === '') {   // This will be true for all values of exists except false, null, undefined and 0\n    exists = true;                 // That's strange behaviour (we should only use true/false) but that's the way Mongo does it...\n  } else {\n    exists = false;\n  }\n\n  if (value === undefined) {\n    return !exists\n  } else {\n    return exists;\n  }\n};\n\n// Specific to arrays\ncomparisonFunctions.$size = function (obj, value) {\n    if (!util.isArray(obj)) { return false; }\n    if (value % 1 !== 0) { throw new Error(\"$size operator called without an integer\"); }\n\n    return (obj.length == value);\n};\ncomparisonFunctions.$elemMatch = function (obj, value) {\n  if (!util.isArray(obj)) { return false; }\n  var i = obj.length;\n  var result = false;   // Initialize result\n  while (i--) {\n    if (match(obj[i], value)) {   // If match for array element, return true\n      result = true;\n      break;\n    }\n  }\n  return result;\n};\narrayComparisonFunctions.$size = true;\narrayComparisonFunctions.$elemMatch = true;\n\n\n/**\n * Match any of the subqueries\n * @param {Model} obj\n * @param {Array of Queries} query\n */\nlogicalOperators.$or = function (obj, query) {\n  var i;\n\n  if (!util.isArray(query)) { throw new Error(\"$or operator used without an array\"); }\n\n  for (i = 0; i < query.length; i += 1) {\n    if (match(obj, query[i])) { return true; }\n  }\n\n  return false;\n};\n\n\n/**\n * Match all of the subqueries\n * @param {Model} obj\n * @param {Array of Queries} query\n */\nlogicalOperators.$and = function (obj, query) {\n  var i;\n\n  if (!util.isArray(query)) { throw new Error(\"$and operator used without an array\"); }\n\n  for (i = 0; i < query.length; i += 1) {\n    if (!match(obj, query[i])) { return false; }\n  }\n\n  return true;\n};\n\n\n/**\n * Inverted match of the query\n * @param {Model} obj\n * @param {Query} query\n */\nlogicalOperators.$not = function (obj, query) {\n  return !match(obj, query);\n};\n\n\n/**\n * Use a function to match\n * @param {Model} obj\n * @param {Query} query\n */\nlogicalOperators.$where = function (obj, fn) {\n  var result;\n\n  if (!_.isFunction(fn)) { throw new Error(\"$where operator used without a function\"); }\n\n  result = fn.call(obj);\n  if (!_.isBoolean(result)) { throw new Error(\"$where function must return boolean\"); }\n\n  return result;\n};\n\n\n/**\n * Tell if a given document matches a query\n * @param {Object} obj Document to check\n * @param {Object} query\n */\nfunction match (obj, query) {\n  var queryKeys, queryKey, queryValue, i;\n\n  // Primitive query against a primitive type\n  // This is a bit of a hack since we construct an object with an arbitrary key only to dereference it later\n  // But I don't have time for a cleaner implementation now\n  if (isPrimitiveType(obj) || isPrimitiveType(query)) {\n    return matchQueryPart({ needAKey: obj }, 'needAKey', query);\n  }\n\n  // Normal query\n  queryKeys = Object.keys(query);\n  for (i = 0; i < queryKeys.length; i += 1) {\n    queryKey = queryKeys[i];\n    queryValue = query[queryKey];\n\n    if (queryKey[0] === '$') {\n      if (!logicalOperators[queryKey]) { throw new Error(\"Unknown logical operator \" + queryKey); }\n      if (!logicalOperators[queryKey](obj, queryValue)) { return false; }\n    } else {\n      if (!matchQueryPart(obj, queryKey, queryValue)) { return false; }\n    }\n  }\n\n  return true;\n};\n\n\n/**\n * Match an object against a specific { key: value } part of a query\n * if the treatObjAsValue flag is set, don't try to match every part separately, but the array as a whole\n */\nfunction matchQueryPart (obj, queryKey, queryValue, treatObjAsValue) {\n  var objValue = getDotValue(obj, queryKey)\n    , i, keys, firstChars, dollarFirstChars;\n\n  // Check if the value is an array if we don't force a treatment as value\n  if (util.isArray(objValue) && !treatObjAsValue) {\n    // If the queryValue is an array, try to perform an exact match\n    if (util.isArray(queryValue)) {\n      return matchQueryPart(obj, queryKey, queryValue, true);\n    }\n\n    // Check if we are using an array-specific comparison function\n    if (queryValue !== null && typeof queryValue === 'object' && !util.isRegExp(queryValue)) {\n      keys = Object.keys(queryValue);\n      for (i = 0; i < keys.length; i += 1) {\n        if (arrayComparisonFunctions[keys[i]]) { return matchQueryPart(obj, queryKey, queryValue, true); }\n      }\n    }\n\n    // If not, treat it as an array of { obj, query } where there needs to be at least one match\n    for (i = 0; i < objValue.length; i += 1) {\n      if (matchQueryPart({ k: objValue[i] }, 'k', queryValue)) { return true; }   // k here could be any string\n    }\n    return false;\n  }\n\n  // queryValue is an actual object. Determine whether it contains comparison operators\n  // or only normal fields. Mixed objects are not allowed\n  if (queryValue !== null && typeof queryValue === 'object' && !util.isRegExp(queryValue) && !util.isArray(queryValue)) {\n    keys = Object.keys(queryValue);\n    firstChars = _.map(keys, function (item) { return item[0]; });\n    dollarFirstChars = _.filter(firstChars, function (c) { return c === '$'; });\n\n    if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) {\n      throw new Error(\"You cannot mix operators and normal fields\");\n    }\n\n    // queryValue is an object of this form: { $comparisonOperator1: value1, ... }\n    if (dollarFirstChars.length > 0) {\n      for (i = 0; i < keys.length; i += 1) {\n        if (!comparisonFunctions[keys[i]]) { throw new Error(\"Unknown comparison function \" + keys[i]); }\n\n        if (!comparisonFunctions[keys[i]](objValue, queryValue[keys[i]])) { return false; }\n      }\n      return true;\n    }\n  }\n\n  // Using regular expressions with basic querying\n  if (util.isRegExp(queryValue)) { return comparisonFunctions.$regex(objValue, queryValue); }\n\n  // queryValue is either a native value or a normal object\n  // Basic matching is possible\n  if (!areThingsEqual(objValue, queryValue)) { return false; }\n\n  return true;\n}\n\n\n// Interface\nmodule.exports.serialize = serialize;\nmodule.exports.deserialize = deserialize;\nmodule.exports.deepCopy = deepCopy;\nmodule.exports.checkObject = checkObject;\nmodule.exports.isPrimitiveType = isPrimitiveType;\nmodule.exports.modify = modify;\nmodule.exports.getDotValue = getDotValue;\nmodule.exports.match = match;\nmodule.exports.areThingsEqual = areThingsEqual;\nmodule.exports.compareThings = compareThings;\n"},"lineCount":836}},"hash":"593faaa5e83588a9ec75bc74a55dcf0b","cacheData":{"env":{}}}
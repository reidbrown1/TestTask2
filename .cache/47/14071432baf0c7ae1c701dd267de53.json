{"id":"../node_modules/binary-search-tree/lib/customUtils.js","dependencies":[{"name":"/Users/reidbrown/react-bootcamp/TestTask/package.json","includedInParent":true,"mtime":1592783413663},{"name":"/Users/reidbrown/react-bootcamp/TestTask/.babelrc","includedInParent":true,"mtime":1589062941327},{"name":"/Users/reidbrown/react-bootcamp/TestTask/node_modules/binary-search-tree/package.json","includedInParent":true,"mtime":1592783413306}],"generated":{"js":"/**\n * Return an array with the numbers from 0 to n-1, in a random order\n */\nfunction getRandomArray (n) {\n  var res, next;\n\n  if (n === 0) { return []; }\n  if (n === 1) { return [0]; }\n\n  res = getRandomArray(n - 1);\n  next = Math.floor(Math.random() * n);\n  res.splice(next, 0, n - 1);   // Add n-1 at a random position in the array\n\n  return res;\n};\nmodule.exports.getRandomArray = getRandomArray;\n\n\n/*\n * Default compareKeys function will work for numbers, strings and dates\n */\nfunction defaultCompareKeysFunction (a, b) {\n  if (a < b) { return -1; }\n  if (a > b) { return 1; }\n  if (a === b) { return 0; }\n\n  var err = new Error(\"Couldn't compare elements\");\n  err.a = a;\n  err.b = b;\n  throw err;\n}\nmodule.exports.defaultCompareKeysFunction = defaultCompareKeysFunction;\n\n\n/**\n * Check whether two values are equal (used in non-unique deletion)\n */\nfunction defaultCheckValueEquality (a, b) {\n  return a === b;\n}\nmodule.exports.defaultCheckValueEquality = defaultCheckValueEquality;\n","map":{"mappings":[{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/binary-search-tree/lib/customUtils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}}],"sources":{"../node_modules/binary-search-tree/lib/customUtils.js":"/**\n * Return an array with the numbers from 0 to n-1, in a random order\n */\nfunction getRandomArray (n) {\n  var res, next;\n\n  if (n === 0) { return []; }\n  if (n === 1) { return [0]; }\n\n  res = getRandomArray(n - 1);\n  next = Math.floor(Math.random() * n);\n  res.splice(next, 0, n - 1);   // Add n-1 at a random position in the array\n\n  return res;\n};\nmodule.exports.getRandomArray = getRandomArray;\n\n\n/*\n * Default compareKeys function will work for numbers, strings and dates\n */\nfunction defaultCompareKeysFunction (a, b) {\n  if (a < b) { return -1; }\n  if (a > b) { return 1; }\n  if (a === b) { return 0; }\n\n  var err = new Error(\"Couldn't compare elements\");\n  err.a = a;\n  err.b = b;\n  throw err;\n}\nmodule.exports.defaultCompareKeysFunction = defaultCompareKeysFunction;\n\n\n/**\n * Check whether two values are equal (used in non-unique deletion)\n */\nfunction defaultCheckValueEquality (a, b) {\n  return a === b;\n}\nmodule.exports.defaultCheckValueEquality = defaultCheckValueEquality;\n"},"lineCount":42}},"hash":"81aebc403b3e1cb2f8d3117809f86648","cacheData":{"env":{}}}